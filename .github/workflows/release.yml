name: Release

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest
 
    steps:
    - uses: actions/checkout@v2
      name: Checkout Code

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
       
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
     
    - name: Restore NuGet Packages
      run: nuget restore GamingEventPlugins.sln
 
    - name: Build
      run: msbuild GamingEventPlugins.sln /p:Configuration=Release

    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x' # SDK Version to use.
          source-url: https://nuget.pkg.github.com/<owner>/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - run: dotnet build --configuration Release <my project>
      - name: Create the package
        run: dotnet pack --configuration Release <my project>
      - name: Publish the package to GPR
        run: dotnet nuget push <my project>/bin/Release/*.nupkg
  release:
    name: 'Release GitHub'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 13
      - name: Install dependencies
        run: npm ci
      - name: Build library
        run: npm run build
      - name: Get version from package.json before release step
        id: initversion
        run: echo "::set-output name=version::$(npm run get-version --silent)"
      - name: Release to NPM and GitHub
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: jonaslagoni
          GIT_AUTHOR_EMAIL: jonas-lt@live.dk
          GIT_COMMITTER_NAME: jonaslagoni
          GIT_COMMITTER_EMAIL: jonas-lt@live.dk
        run: npm run release
      - name: Get version from package.json after release step
        id: extractver
        run: echo "::set-output name=version::$(npm run get-version --silent)"
      - name: Create Pull Request with updated package files
        if: steps.initversion.outputs.version != steps.extractver.outputs.version
        uses: peter-evans/create-pull-request@v2.4.4
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: 'chore(release): ${{ steps.extractver.outputs.version }}'
          committer: jonaslagoni <jonas-lt@live.dk>
          author: jonaslagoni <jonas-lt@live.dk>
          title: 'chore(release): ${{ steps.extractver.outputs.version }}'
          body: 'Version bump in package.json and package-lock.json for release [${{ steps.extractver.outputs.version }}](https://github.com/${{github.repository}}/releases/tag/v${{ steps.extractver.outputs.version }})'
          branch: version-bump/${{ steps.extractver.outputs.version }}